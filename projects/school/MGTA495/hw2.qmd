---
title: "Poisson Regression Examples"
image: ../../../images/R_logo.png
author: "Wesley Covey"
date: 2025-05-11
callout-appearance: minimal 
---


## Blueprinty Case Study

### Introduction

Blueprinty is a small firm that makes software for developing blueprints specifically for submitting patent applications to the US patent office. Their marketing team would like to make the claim that patent applicants using Blueprinty's software are more successful in getting their patent applications approved. Ideal data to study such an effect might include the success rate of patent applications before using Blueprinty's software and after using it. Unfortunately, such data is not available. 

However, Blueprinty has collected data on 1,500 mature (non-startup) engineering firms. The data include each firm's number of patents awarded over the last 5 years, regional location, age since incorporation, and whether or not the firm uses Blueprinty's software. The marketing team would like to use this data to make the claim that firms using Blueprinty's software are more successful in getting their patent applications approved.


### Data

```{r, echo=FALSE}
setwd("/home/jovyan/MSBA/mysite/projects/school/MGTA495")
library(ggplot2)
library(patchwork)
```
```{r, echo=FALSE}
df <- read.csv("data/blueprinty.csv")

non_cust_mean <- mean (df[df$iscustomer == 0, ]$patents, na.rm = TRUE)
p1 <- ggplot(df[df$iscustomer == 0, ], aes(x = patents)) + 
      geom_histogram(bins = 15) + 
      geom_vline(xintercept = non_cust_mean) + 
      labs(title = "Non-Customers")

cust_mean <- mean (df[df$iscustomer == 1, ]$patents, na.rm = TRUE)
p2 <- ggplot(df[df$iscustomer == 1, ], aes(x = patents)) + 
      geom_histogram(bins = 15) + 
      geom_vline(xintercept = mean(df$patents, na.rm = TRUE)) + 
      labs(title = "Customers")

print(paste("Non-Customer mean: ", non_cust_mean))
print(paste("Customer mean: ", cust_mean))
p1 + p2

```

The histograms of patent counts by customers vs non-customers reveal nearly identical distributions with a slightly higher mean value for customers of the firm.

Blueprinty customers are not selected at random. It may be important to account for systematic differences in the age and regional location of customers vs non-customers.

```{r, echo=FALSE}
p1 <- ggplot(df[df$iscustomer == 0, ], aes(x = factor(region))) + 
      geom_bar() + 
      labs(title = "Non-Customers")

p2 <- ggplot(df[df$iscustomer == 1, ], aes(x = factor(region))) + 
      geom_bar() + 
      labs(title = "Customers")

p1 + p2

p3 <- ggplot(df, aes(x = factor(iscustomer), y = age)) + 
      geom_boxplot()

p3
```

The company's customers are disproportionately from the Northeast region, though not entirely. The distibution of age is, howver, much more even for customer vs non-customers.

### Estimation of Simple Poisson Model

Since our outcome variable of interest can only be small integer values per a set unit of time, we can use a Poisson density to model the number of patents awarded to each engineering firm over the last 5 years. We start by estimating a simple Poisson model via Maximum Likelihood.

```{r, echo=FALSE}
Y <- df$patents

poisson_loglikelihood <- function(lambda, Y) {
  if (lambda <= 0) return(-Inf)
  sum(Y * log(lambda) - lambda - lgamma(Y + 1))
}

lambda_vals <- seq(0.1, 10, by = 0.1)
loglik_vals <- sapply(lambda_vals, poisson_loglikelihood, Y = Y)
loglik_df <- data.frame(lambda = lambda_vals, loglikelihood = loglik_vals)

ggplot(loglik_df, aes(x = lambda, y = loglikelihood)) +
  geom_line()

neg_loglik <- function(lambda) -poisson_loglikelihood(lambda, Y)
result <- optim(par = 1, fn = neg_loglik, method = "Brent", lower = 0.001, upper = 20)
lambda_mle <- result$par
```


### Estimation of Poisson Regression Model

Next, we extend our simple Poisson model to a Poisson Regression Model such that $Y_i = \text{Poisson}(\lambda_i)$ where $\lambda_i = \exp(X_i'\beta)$. The interpretation is that the success rate of patent awards is not constant across all firms ($\lambda$) but rather is a function of firm characteristics $X_i$. Specifically, we will use the covariates age, age squared, region, and whether the firm is a customer of Blueprinty.

```{r, echo=FALSE}

df$age_sq <- df$age^2
X <- model.matrix(~ age + age_sq + region + iscustomer, data = df)

poisson_regression_likelihood <- function(beta, Y, X) {
  lambda <- exp(X %*% beta)
  if (any(lambda <= 0)) return(-Inf)
  sum(Y * log(lambda) - lambda - lgamma(Y + 1))
}
```


```{r, echo=FALSE}
neg_loglik <- function(beta, Y, X) {
  lambda <- exp(X %*% beta)
  -sum(Y * log(lambda) - lambda - lgamma(Y + 1))
}

init_beta <- rep(0, ncol(X))
result <- optim(par = init_beta, fn = neg_loglik, Y = Y, X = X, hessian = TRUE, method = "BFGS")

beta_hat <- result$par
hessian <- result$hessian
se_hat <- sqrt(diag(solve(hessian)))

coef_table <- data.frame(
  Estimate = beta_hat,
  Std_Error = se_hat,
  row.names = colnames(X)
)
print(coef_table)
```


## AirBnB Case Study

### Introduction

AirBnB is a popular platform for booking short-term rentals. In March 2017, students Annika Awad, Evan Lebo, and Anna Linden scraped of 40,000 Airbnb listings from New York City.  The data include the following variables:

:::: {.callout-note collapse="true"}
### Variable Definitions

    - `id` = unique ID number for each unit
    - `last_scraped` = date when information scraped
    - `host_since` = date when host first listed the unit on Airbnb
    - `days` = `last_scraped` - `host_since` = number of days the unit has been listed
    - `room_type` = Entire home/apt., Private room, or Shared room
    - `bathrooms` = number of bathrooms
    - `bedrooms` = number of bedrooms
    - `price` = price per night (dollars)
    - `number_of_reviews` = number of reviews for the unit on Airbnb
    - `review_scores_cleanliness` = a cleanliness score from reviews (1-10)
    - `review_scores_location` = a "quality of location" score from reviews (1-10)
    - `review_scores_value` = a "quality of value" score from reviews (1-10)
    - `instant_bookable` = "t" if instantly bookable, "f" if not

::::
```{r, echo=FALSE}
df2 <- read.csv("data/airbnb.csv")
summary(df2)

df_clean <- na.omit(df2[, c("number_of_reviews", "room_type", "bathrooms", "bedrooms", "price", "review_scores_cleanliness", "review_scores_location", "review_scores_value", "instant_bookable")])

df_clean$room_type <- factor(df_clean$room_type)
df_clean$instant_bookable <- factor(df_clean$instant_bookable)

model <- glm(number_of_reviews ~ room_type + bathrooms + bedrooms + price +
               review_scores_cleanliness + review_scores_location +
               review_scores_value + instant_bookable,
             data = df_clean, family = poisson())
summary(model)

```

Instant booking and higher cleanliness scores both have positive coefficients, leading to more reviews. Shared rooms and higher number of bathrooms both have negative coefficients, resulting in fewer reviews. Surprisingly, higher location and value scores are also linked to fewer reviews, though not as strong as the last two variables. The only variable not statistically significant to the model at the 95% confidence level is price.




